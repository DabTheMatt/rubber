{"version":3,"sources":["styles.js","components/Graph.js","components/BlueGraph.js","components/SpriteHero.js","components/Playground.js","components/PixelBackgroud.js","components/GraphArea.js","components/GlobalStyles.js","components/ControlPanel.js","App.js","reportWebVitals.js","index.js"],"names":["setColor","styled","div","x","y","z","setFlex","BlueGraphWrapper","Component","SpriteHero","state","top","left","topOff","leftOff","top2","left2","top2Off","left2Off","div1Color","div2Color","handleKeyDown","e","keyCode","setState","div1","document","getElementById","div2","console","log","offsetTop","offsetLeft","handleCollision","style","position","BlackBox1","this","background","id","name","autoFocus","onKeyDown","BlackBox2","props","PlaygroundWrapper","PixelBackgroud","pixels","palette","colors","greens","componentDidMount","tempPixels","i","pixel","clicked","color","Math","floor","random","length","push","handleClick","forEach","el","PixelBackgroudWrapper","map","onClick","className","GraphArea","GraphWrapper","Globals","createGlobalStyle","ControlPanelWrapper","App","changePalette","blues","AppWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3ee1985c.chunk.js","sourcesContent":["import {css} from \"styled-components\";\n\nexport const setColor = {\n    white: \"#f8f9fa\",\n    lightGray: \"#dee2e6\",\n    gray: \"#adb5bd\",\n    darkGray: \"#495057\",\n    black: \"#212529\",\n    blueAccent: \"#4ea8de\"\n};\n\nexport const setFlex = ({ x = \"center\", y = \"center\", z = \"row\" } = {}) => {\n    return `display:flex;align-items:${x};justify-content:${y};flex-direction:\"${z}`;\n};","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { setColor, setFlex } from '../styles';\n\nexport const Graph = styled.div`\n\n${setFlex(\"center\", \"center\")};\nbackground: ${setColor.black};\nheight: 80%;\nwidth: 80%;\n`;\n\nexport default Graph;","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport { setColor, setFlex } from '../styles';\n\nclass BlueGraph extends Component {\nstate = {\n\n}\n\n    render() {\n        return (\n            <BlueGraphWrapper>\n                <h1></h1>\n                <div className=\"blueGraphBcg\">\n                    <div className=\"axisX\"></div>\n                    <div className=\"axisStart\"></div>\n                    <div className=\"axisEnd\">&#62;</div>\n                    <div className=\"percentsWrapper\">\n                    <div className=\"percent10\"></div>\n                    <div className=\"percent20\"></div>\n                    <div className=\"percent30\"></div>\n                    <div className=\"percent40\"></div>\n                    <div className=\"percent50\"></div>\n                    <div className=\"percent60\"></div>\n                    <div className=\"percent70\"></div>\n                    <div className=\"percent80\"></div>\n                    <div className=\"percent90\"></div>\n                    </div>\n                </div>\n            </BlueGraphWrapper>\n        );\n    }\n}\n\nexport const BlueGraphWrapper = styled.div`\n    color: ${setColor.white};\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    .blueGraphBcg {\n        background: linear-gradient(10deg, rgba(0,119,182,0.5), rgba(0,180,216, 0.5) );\n        height: 40vh;\n        width: 70vw;\n        z-index: 0;\n        display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    box-shadow: 5px 5px rgba(0,0,0,0.5);\n    }\n\n    .axisX {\n        background: ${setColor.white};\n        height: 1px;\n        width: 65vw;\n        z-index: 1;\n        position: absolute;\n        \n    }\n\n    .axisStart {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n        left: -32.5vw;\n        top: 13px;\n    }\n\n    .axisEnd {\n        position: relative;\n        left: 32.3vw;\n        top: -2px;\n        font-weight: 400;\n    }\n\n    .percent10 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n       \n    }\n\n    .percent20 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n        \n    }\n    .percent30 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n       \n    }\n    .percent40 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n    }\n    .percent50 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n       \n    }\n    .percent60 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n        \n    }\n    .percent70 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n        \n     \n    }\n    .percent80 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n        \n        \n    }\n    .percent90 {\n        background: ${setColor.white};\n        height: 10px;\n        width: 1px;\n        position: relative;\n        \n    }\n\n    .percentsWrapper {\n        height: 10px;\n        width: 65vw;\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n        position: relative;\n        top: -15px\n    }\n`;\n\n\nexport default BlueGraph;","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { setColor } from \"../styles\";\n\nclass SpriteHero extends Component {\n  state = {\n    top: 20,\n    left: 20,\n    topOff: \"\",\n    leftOff: \"\",\n    top2: 280,\n    left2: 280,\n    top2Off: 0,\n    left2Off: 1,\n    div1Color: \"black\",\n    div2Color: \"white\"\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 39) {\n      this.setState({\n        left: this.state.left + 10,\n      });\n    } else if (e.keyCode === 37) {\n      this.setState({\n        left: this.state.left - 10,\n      });\n    } else if (e.keyCode === 38) {\n      this.setState({\n        top: this.state.top - 10,\n      });\n    } else if (e.keyCode === 40) {\n      this.setState({\n        top: this.state.top + 10,\n      });\n    } else if (e.keyCode === 87) {\n        this.setState({\n            top2: this.state.top2 - 10\n        })\n    } else if (e.keyCode === 65) {\n        this.setState({\n          left2: this.state.left2 - 10,\n        });\n      } else if (e.keyCode === 83) {\n        this.setState({\n          top2: this.state.top2 + 10,\n        });\n      } else if (e.keyCode === 68) {\n        this.setState({\n          left2: this.state.left2 + 10,\n        });\n      }\n      \n    const div1 = document.getElementById(\"div1\");\n    const div2 = document.getElementById(\"div2\");\n    console.log(\"pressed\", e.keyCode, \"top:\", div1.offsetTop, \"left\", div1.offsetLeft, e.keyCode, \"top2:\", div2.offsetTop, \"left2\", div2.offsetLeft);\n    this.setState({\n        topOff: div1.offsetTop,\n        leftOff: div1.offsetLeft,\n        top2Off: div2.offsetTop,\n        left2Off: div2.offsetLeft \n    })\n    \n    \n    if (this.state.top === this.state.top2 && this.state.left === this.state.left2) {\n        this.setState({\n            div1Color: \"red\",\n            div2Color: \"red\"\n        })\n        console.log(\"collision\");\n    } else {\n        this.setState({\n            div1Color: \"black\",\n            div2Color: \"white\"\n        })\n    }\n\n    if (this.state.topOff < 10 || this.state.leftOff < 10) {\n        this.setState({\n            div1Color: \"green\"\n        })\n    } else {\n        this.setState({\n            div1Color: \"black\",\n            \n        })\n    }\n  };\n\nhandleCollision = () => {\n    \n}\n\n  \n\n   \n\n  render() {\n    return (\n      <div style={{position: \"absolute\"}}>\n        <BlackBox1\n          left={this.state.left}\n          top={this.state.top}\n          background={this.state.div1Color}\n          id=\"div1\"\n\n        ><input\n        name=\"1\"\n          autoFocus\n          onKeyDown={(e) => this.handleKeyDown(e)}\n          \n        />\n        </BlackBox1>\n        <BlackBox2\n          left2={this.state.left2}\n          top2={this.state.top2}\n          background={this.state.div2Color}\n          id=\"div2\"\n        >\n        </BlackBox2>\n        \n      </div>\n    );\n  }\n}\n\nexport const BlackBox1 = styled.div`\n  height: 20px;\n  width: 20px;\n  background: ${props => props.background};\n  position: relative;\n  left: ${(props) => `${props.left}px`};\n  top: ${(props) => `${props.top}px`};\n\n  input {\n      opacity: 0;\n      cursor: pointer;\n      width: 20px;\n      height: 20px;\n  }\n`;\nexport const BlackBox2 = styled.div`\n  height: 20px;\n  width: 20px;\n  background: ${props => props.background};\n  position: relative;\n  left: ${(props) => `${props.left2}px`};\n  top: ${(props) => `${props.top2}px`};\n\n  input {\n      opacity: 0;\n      cursor: pointer;\n      width: 20px;\n  }\n`;\n\nexport default SpriteHero;\n","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport SpriteHero from './SpriteHero';\n\nclass Playground extends Component {\n    render() {\n        return (\n            <PlaygroundWrapper>\n                <SpriteHero />\n            </PlaygroundWrapper>\n        );\n    }\n}\n\nexport const PlaygroundWrapper = styled.div`\nheight: 800px;\nwidth: 800px;\nbackground: linear-gradient(10deg, rgba(0,119,182,0.5), rgba(0,180,216, 0.5) );\n`;\n\nexport default Playground;","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport { setColor } from '../styles';\n\nclass PixelBackgroud extends Component {\n    state = {\n        id: 0,\n        pixels: [],\n        palette: \"blue\",\n        colors: [\"03045e\", \"023e8a\", \"0077b6\", \"0096c7\", \"00b4d8\", \"48cae4\", \"90e0ef\", \"ade8f4\", \"caf0f8\", \"ffffff\"],\n        greens: [\"d9ed92\", \"b5e48c\", \"99d98c\", \"76c893\", \"52b69a\", \"34a0a4\", \"168aad\", \"1a759f\", \"1e6091\", \"184e77\", \"ffffff\"]\n    }\n\ncomponentDidMount = () => {\n    \n    console.log(\"prpos:\", this.props.palette);\n    this.setState({\n        palette: this.props.palette\n    })\n\n    let tempPixels = this.state.pixels\n    for (let i=0; i<400; i++) {\n\n        if (this.state.palette === \"blue\") {\n            console.log(\"blue\", this.state.palette);\n        let pixel = {\n        id: i,\n        clicked: false,\n        color: Math.floor(Math.random() * ((this.state.colors.length-1) - 1)*1)\n    }\n        tempPixels.push(pixel)\n    }\n    \nelse if (this.props.palette === \"green\") {\n    console.log(\"palette:\", this.state.palette);\n    let pixel = {\n    id: i,\n    clicked: false,\n    color: Math.floor(Math.random() * ((this.state.greens.length-1) - 1)*1)\n}\n    tempPixels.push(pixel)\n}\nthis.setState({\n    pixels: tempPixels\n})\n    }\n\n\n}\n\nhandleClick = (id) => {\n    console.log(\"clicked\", id);\n    let tempPixels = this.state.pixels;\n    tempPixels.forEach((el) => {\n        \n        if (el.id === id) {\n            console.log(\"here\", el.id);\n            if (!el.clicked) {\n                el.color = this.state.colors.length-1;\n                el.clicked = true\n            } else if (el.clicked) {\n                el.color = Math.floor(Math.random() * ((this.state.colors.length-1) - 1)*1);\n                el.clicked = false\n            }\n            \n        }})\n        this.setState({\n            pixels: [...tempPixels]\n        })\n    \n    \n    \n}\n\n    render() {\n        return (\n            <PixelBackgroudWrapper>\n                {this.state.pixels.map((el)=>{\n                    return (\n                        <div \n                        key={el.id}\n                        onClick={()=>this.handleClick(el.id)}\n                        className=\"pixel\" style={{background: `#${this.state.colors[el.color]}`}}></div>\n                    )\n                })}\n            </PixelBackgroudWrapper>\n            \n        );\n    }\n}\n\nexport const PixelBackgroudWrapper = styled.div`\nbackground: black;\nheight: 100%;\nwidth: 100%;\ndisplay: flex;\nflex-wrap: wrap;\nalign-items: flex-start;\njustify-content: flex-start;\nbox-shadow: 20px 20px 20px rgba(0,0,0,0.2);\n\n.pixel {\n    width: 5%;\n    height: 5%;\n    border: 0.5px solid ${setColor.black};\n    opacity: 0.9;\n}\n`;\n\nexport default PixelBackgroud;","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport {setColor, setFlex} from \"../styles\";\nimport Graph from \"./Graph\";\nimport BlueGraph from \"./BlueGraph\";\nimport Playground from './Playground';\nimport PixelBackgroud from './PixelBackgroud';\n\n\nclass GraphArea extends Component {\n    render() {\n        return (\n            <GraphWrapper>\n                \n                <PixelBackgroud \n                palette={this.props.palette}\n                />\n                \n            </GraphWrapper>\n        );\n    }\n}\n\nexport const GraphWrapper = styled.div`\ndisplay: flex;\n    align-items: center;\n    justify-content: center;\nheight: 600px;\nwidth: 600px;\n\n\n`;\nexport default GraphArea;","import  {createGlobalStyle} from \"styled-components\";\nimport { setColor, setFlex } from \"../styles\";\n\nexport const Globals = createGlobalStyle`\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    background: ${setColor.white};\n}\n\n\n`;\n\nexport default Globals;","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport {setColor} from \"../styles\"\n\nclass ControlPanel extends Component {\n    handleColor = (color) => {\n        this.props.changePalette(color)\n    }\n\n    render() {\n        return (\n            <ControlPanelWrapper>\n                <div className=\"blue\" \n                onClick={()=>this.handleColor(\"blue\")}></div>\n                <div className=\"green\" \n                onClick={()=>this.handleColor(\"green\")}></div>\n            </ControlPanelWrapper>\n        );\n    }\n}\n\nexport const ControlPanelWrapper = styled.div`\nwidth: 200px;\nheight: 600px;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nflex-direction: column;\n\n.blue {\n    width: 40px;\n    height: 40px;\n    background: #0077b6;\n    border: 0.5px solid ${setColor.black};\n    opacity: 0.9;\n    margin-bottom: 1rem;;\n}\n\n.green {\n    width: 40px;\n    height: 40px;\n    background: #52b69a;\n    border: 0.5px solid ${setColor.black};\n    opacity: 0.9;\n    \n}\n`;\n\n\nexport default ControlPanel;","import './App.css';\nimport GraphArea  from './components/GraphArea';\nimport styled from 'styled-components';\nimport  {setFlex, setColor} from \"./styles\";\nimport Globals from './components/GlobalStyles';\nimport ControlPanel from './components/ControlPanel';\n\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    palette: \"green\"\n  }\n\nchangePalette = (color) => {\n  console.log(\"color:\", color);\n  this.setState({\n    palette: color,\n    blues: [\"03045e\", \"023e8a\", \"0077b6\", \"0096c7\", \"00b4d8\", \"48cae4\", \"90e0ef\", \"ade8f4\", \"caf0f8\", \"ffffff\"],\n    greens: [\"d9ed92\", \"b5e48c\", \"99d98c\", \"76c893\", \"52b69a\", \"34a0a4\", \"168aad\", \"1a759f\", \"1e6091\", \"184e77\", \"ffffff\"]\n  })\n}\n\n  render() {\n    return (\n      <div>\n        <Globals />\n      <AppWrapper>\n        <GraphArea \n        palette={this.state.palette}\n        \n        />\n        \n      </AppWrapper>\n      </div>\n    );\n  }\n}\n\nexport const AppWrapper = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nheight: 100vh;\nwidth: 100vw;\nbackground: ${setColor.gray};\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}